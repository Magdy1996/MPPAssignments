@startuml
actor User
participant "CheckoutForm" as CheckoutForm
participant "CheckoutController" as CheckoutController
participant "LibraryMember" as LibraryMember
participant "CheckoutRecord" as CheckoutRecord
participant "ILibraryDBSubsystem" as ILibraryDBSubsystem

User -> CheckoutForm : 1. checkoutBook()
activate CheckoutForm

CheckoutForm -> CheckoutController : 1.1. checkoutBook(m_book, m_member)
activate CheckoutController

CheckoutController -> CheckoutRecord : 1.1.1. new CheckoutRecord()
activate CheckoutRecord
CheckoutRecord-->CheckoutController : return 
deactivate CheckoutRecord


CheckoutController -> CheckoutRecord : 1.1.2. setDueDate(member.getCheckoutPeriod())
activate CheckoutRecord
CheckoutRecord->LibraryMember:1.1.2.1 member.getCheckoutPeriod()
activate LibraryMember
LibraryMember-->CheckoutRecord : return
deactivate LibraryMember
CheckoutRecord-->CheckoutController :  return
deactivate CheckoutRecord

CheckoutController ->CheckoutRecord :1.1.3 addBook(book)
activate CheckoutRecord
CheckoutRecord-->CheckoutController: return 
deactivate CheckoutRecord

CheckoutController->LibraryMember: 1.1.4. addCheckoutRecord(aCheckoutRecord)
activate LibraryMember
LibraryMember-->CheckoutController
deactivate LibraryMember

CheckoutController->ILibraryDBSubsystem:1.1.5. addChcekoutRecord(member.getMemberID(), aCheckoutRecord)
activate ILibraryDBSubsystem
ILibraryDBSubsystem->LibraryMember : 1.1.5.1. member.getMemberID()
activate LibraryMember
LibraryMember-->ILibraryDBSubsystem:return 
deactivate LibraryMember
ILibraryDBSubsystem-->CheckoutController:return 
deactivate ILibraryDBSubsystem
CheckoutController-->CheckoutForm : return
deactivate CheckoutController

CheckoutForm->CheckoutForm :1.2. displayCheckoutInfo()
CheckoutForm->CheckoutForm: 1.3. clearCheckoutFields()


@enduml
